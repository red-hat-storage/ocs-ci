#################################################################################################################
# Create the rook operator with ceph-csi driver and necessary security context constraints for running
# Rook in an OpenShift cluster.
#   kubectl create -f common.yaml
#   kubectl create -f operator-openshift-with-csi.yaml
#   kubectl create -f cluster.yaml
#################################################################################################################
---
kind: SecurityContextConstraints
# older versions of openshift have "apiVersion: v1"
apiVersion: security.openshift.io/v1
metadata:
  name: rook-ceph
allowPrivilegedContainer: true
allowHostNetwork: true
allowHostDirVolumePlugin: true
priority:
allowedCapabilities: []
allowHostPorts: true
allowHostPID: true
allowHostIPC: true
readOnlyRootFilesystem: false
requiredDropCapabilities: []
defaultAddCapabilities: []
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
fsGroup:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
allowedFlexVolumes:
  - driver: "ceph.rook.io/rook"
  - driver: "ceph.rook.io/rook-ceph"
volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - flexVolume
  - hostPath
  - persistentVolumeClaim
  - projected
  - secret
users:
  # A user needs to be added for each rook service account.
  # This assumes running in the default sample "rook-ceph" namespace.
  # If other namespaces or service accounts are configured, they need to be updated here.
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:rook-ceph-system
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:default
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:rook-ceph-mgr
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:rook-ceph-osd
---
kind: SecurityContextConstraints
# older versions of openshift have "apiVersion: v1"
apiVersion: security.openshift.io/v1
metadata:
  name: rook-ceph-csi
allowPrivilegedContainer: true
allowHostNetwork: true
allowHostDirVolumePlugin: true
priority:
allowedCapabilities: ['*']
allowHostPorts: true
allowHostPID: true
allowHostIPC: true
readOnlyRootFilesystem: false
requiredDropCapabilities: []
defaultAddCapabilities: []
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
allowedFlexVolumes:
  - driver: "ceph.rook.io/rook"
  - driver: "ceph.rook.io/rook-ceph"
volumes: ['*']
users:
  # A user needs to be added for each rook service account.
  # This assumes running in the default sample "rook-ceph" namespace.
  # If other namespaces or service accounts are configured, they need to be updated here.
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:rook-csi-rbd-plugin-sa
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:rook-csi-rbd-provisioner-sa
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:rook-csi-rbd-attacher-sa
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:rook-csi-cephfs-plugin-sa
  - system:serviceaccount:{{ cluster_namespace | default('openshift-storage') }}:rook-csi-cephfs-provisioner-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rook-ceph-operator
  namespace: {{ cluster_namespace | default('openshift-storage') }}
  labels:
    operator: rook
    storage-backend: ceph
spec:
  selector:
    matchLabels:
      app: rook-ceph-operator
  replicas: 1
  template:
    metadata:
      labels:
        app: rook-ceph-operator
    spec:
      serviceAccountName: rook-ceph-system
      containers:
      - name: rook-ceph-operator
        image: {{ rook_image | default('rook/ceph:master') }}
        args: ["ceph", "operator"]
        volumeMounts:
        - mountPath: /var/lib/rook
          name: rook-config
        - mountPath: /etc/ceph
          name: default-config-dir
        env:
        - name: ROOK_CURRENT_NAMESPACE_ONLY
          value: "true"
        # CSI enablement
        - name: ROOK_CSI_ENABLE_CEPHFS
          value: "true"
        - name: ROOK_CSI_CEPH_IMAGE
          value: "{{ ceph_csi_image | default('quay.io/cephcsi/cephcsi:canary') }}"
        - name: ROOK_CSI_ENABLE_RBD
          value: "true"
        - name: ROOK_CSI_REGISTRAR_IMAGE
          value: "{{ rook_csi_registrar_image | default('quay.io/k8scsi/csi-node-driver-registrar:v1.1.0') }}"
        - name: ROOK_CSI_PROVISIONER_IMAGE
          value: "{{ rook_csi_provisioner_image | default('quay.io/k8scsi/csi-provisioner:v1.2.0') }}"
        - name: ROOK_CSI_SNAPSHOTTER_IMAGE
          value: "{{ rook_csi_snapshotter_image | default('quay.io/k8scsi/csi-snapshotter:v1.1.0') }}"
        - name: ROOK_CSI_ATTACHER_IMAGE
          value: "{{ rook_csi_attacher_image | default('quay.io/k8scsi/csi-attacher:v1.1.1') }}"
        - name: ROOK_HOSTPATH_REQUIRES_PRIVILEGED
          value: "true"
        - name: FLEXVOLUME_DIR_PATH
          value: "/etc/kubernetes/kubelet-plugins/volume/exec"
        # The name of the node to pass with the downward API
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # The pod name to pass with the downward API
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        # The pod namespace to pass with the downward API
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: rook-config
        emptyDir: {}
      - name: default-config-dir
        emptyDir: {}
