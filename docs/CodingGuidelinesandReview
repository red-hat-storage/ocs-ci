Lets follow the following guidelines for the Core Libraries and Test Scripts

 -  Follow pep8 or use autopep8 to automagically conform to pep8 style.
 
 -  Each Python Class is well documented for inheritence, methods and attributes, Add sufficent
    comments for code block that is easy to understand for others to review.

 -  Code Readablity takes priority, Lets avoid crazy hacks and tricks and stick to straight forward
    code blocks that are easy to understand for all.

 -  For core libraries when possible please add the unittest to minimize regression for many tests

 -  Helper functions that are useful to wide variety of tests should reside in utils and/or
    should be carefully reviewed to check if they can actually be methods.

 -  test_scripts will reside in test/ folders and will define run function
 
 -  test_scripts should return non zero exit status for failure and 0 for 'pass'
    ex:  test_scripts/test_ocs_operator.py
            def run(ocs_context, **kw):
                 # use ocs_context to deal with cluster
                 # run your test steps
                 if test_failed:
                     return False
                 else:
                     return Pass
 

Code Reviews:
Lets use the following guidelines for Code Reviews

- Run couple of real tests before submitting for library changes.
  For test changes, they should be run on atleast one environment before 
  merge request is raised.

- It is better to submit small changes in core libraries to avoid regression.

- Thumbs up, LGTM indicates ready to merge.

- All comments should be addressed or responded to with reasoning before merge

