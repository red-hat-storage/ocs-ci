# Resiliency testing configuration

ENV_DATA:
  resiliency_config:
    # Workload types: VDBENCH, CNV_WORKLOAD, GOSBENCH, FIO
    workloads:
      - VDBENCH

    # Run workloads during resiliency testing
    run_workload: true

    # Enable data verification after failure injection
    enable_verification: true

    # VDBENCH Configuration
    vdbench_config:
      enable_parallel_verification: true
      max_verification_threads: 16
      max_workload_restarts: 10
      workload_monitor_interval: 30
      workload_loop: 20  # Number of times to run workload (1 = run once, 20 = run 20 times)

      # Deployment configuration
      num_pvcs_per_interface: 5  # Number of PVCs to create per storage interface (CephFS, CephBlockPool)
      pvc_size: 50  # PVC size in GiB

      # Common workload parameters
      threads: 16
      elapsed: 1200
      interval: 60

      # Block workloads (RBD)
      block:
        size: "20g"

        patterns:
          - name: "random_write"
            rdpct: 0      # Write-only
            seekpct: 100  # Random I/O
            xfersize: "4k"
            skew: 0

          - name: "random_read"
            rdpct: 100    # Read-only
            seekpct: 100  # Random I/O
            xfersize: "8k"
            skew: 0

          - name: "mixed_workload"
            rdpct: 50     # 50% reads, 50% writes
            seekpct: 100  # Random I/O
            xfersize: "64k"
            skew: 0

      # Filesystem workloads (CephFS)
      filesystem:
        size: "10m"
        depth: 4
        width: 5
        files: 10
        file_size: "1m"
        group_all_fwds_in_one_rd: true

        patterns:
          - name: "random_write"
            fileio: "random"
            rdpct: 0      # Write-only
            xfersize: "4k"
            skew: 0

          - name: "sequential_write"
            fileio: "sequential"
            rdpct: 0      # Write-only
            xfersize: "1m"
            skew: 0

          - name: "random_mixed"
            fileio: "random"
            rdpct: 70     # 70% reads, 30% writes
            xfersize: "256k"
            skew: 0

          - name: "small_file_ops"
            fileio: "random"
            rdpct: 50     # 50% reads, 50% writes
            xfersize: "4k"
            skew: 0

    # GOSBENCH configuration
    gosbench_config:
      worker_replicas: 1
      benchmark_duration: 2700
      object_size: "4MiB"
      object_count: 100000
      concurrency: 2
      server_image: "quay.io/mulbc/goroom-server:latest"
      worker_image: "quay.io/mulbc/goroom-worker:latest"
      server_resources:
        memory_request: "256Mi"
        memory_limit: "512Mi"
        cpu_request: "100m"
        cpu_limit: "500m"
      worker_resources:
        memory_request: "128Mi"
        memory_limit: "256Mi"
        cpu_request: "50m"
        cpu_limit: "200m"

    # Background Cluster Operations Configuration
    background_cluster_operations:
      # Enable background ODF validation operations during resiliency testing
      enabled: true

      # Operation interval in seconds (time between operations)
      operation_interval: 60

      # Maximum concurrent background operations
      max_concurrent_operations: 3

      # Enabled operation types (comment out to disable specific operations)
      enabled_operations:
        - snapshot_lifecycle      # PVC snapshot create/restore/delete/verify
        - clone_lifecycle         # PVC clone create/attach/verify/delete
        - node_taint_churn       # Node taints for pod rescheduling
        - osd_operations         # OSD noout flag operations
        - mds_failover           # MDS daemon failover (CephFS)
        - rgw_restart            # RGW pod restart (ObjectStore)
        - reclaim_space          # CSI-Addons ReclaimSpace on RBD volumes
        - longevity_operations   # Comprehensive snapshot/restore/expand testing
        # - volume_replication   # CSI-Addons VolumeReplication (requires DR)

    # Workload scaling configuration for resiliency tests
    scaling_config:
      enabled: true
      min_replicas: 1
      max_replicas: 5
      delay: 30  # Delay in seconds before starting scaling operations
